<?xml version="1.0"?>
<ruleset name="Custom Standard" namespace="MyApp\CS\Standard">
    <description>The PSR-2 based custom coding standard.</description>

    <arg name="tab-width" value="4"/>

    <exclude-pattern>*.blade.php</exclude-pattern>
    <exclude-pattern>/vendor/*</exclude-pattern>

    <!-- 1.- Include the whole PSR-2 standard -->
    <rule ref="PSR2"/>

    <!-- 2.- Include some sniffs from other standards that don't conflict with PSR-2 -->

    <!-- Concatenation -->
    <rule ref="Squiz.Strings.ConcatenationSpacing" />
    <rule ref="Generic.Strings.UnnecessaryStringConcat" />

    <!-- Spacing -->
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing" />
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
    <properties>
			<property name="ignoreSpacingBeforeAssignments" value="false"/>
		</properties>
	</rule>

    <!-- Arrays -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing" />
    <rule ref="Generic.Arrays.ArrayIndent"/>
    <!-- Covers rule: For associative arrays, each item should start on a new line
		 when the array contains more than one item.
		 Also covers various single-line array whitespace issues. -->
	<rule ref="WordPress.Arrays.ArrayDeclarationSpacing"/>
    <!-- Covers rule: Note the comma after the last array item: this is recommended. -->
	<rule ref="WordPress.Arrays.CommaAfterArrayItem"/>

    <!-- Functions -->
    <!-- Only one argument per line in multi-line function calls -->
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="allowMultipleArguments" value="false"/>
        </properties>
    </rule>

</ruleset>
